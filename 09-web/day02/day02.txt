1. 图片与超链接
	1. 图片
		作用 : 在网页中插入一张图片
		语法 : <img src="">
		属性 :
			1. src : 设置图片URL,必填属性
			2. width : 设置图片宽度,取像素值
			3. height : 设置图片高度,取像素值
				注 : 默认情况下,图片会按照原始尺寸显示在网页中,宽高属性可以只写一个,另外一个方向会自动等比缩放
			4. title : 设置图片标题,鼠标悬停于图片时显示标题文本
			5. alt : 设置图片加载失败时的提示文本
	2. 超链接
		1. 作用 : 实现资源文件的跳转
		2. 语法 :
			<a href="链接地址"></a>
		3. 属性 :
			1. href : 设置资源文件的地址,必填
				如果省略,超链接文本跟普通文本无差别
			2. target : 设置目标文件是否在当前窗口打开,默认值为 _self 表示在当前窗口打开新文件.可取 _blank 表示新建窗口打开文件
		4. 默认样式
			超链接自带两种状态:
			访问前 蓝色文本色,自带下划线
			访问后 紫色文本色,自带下划线
		5. 锚点链接
			作用 : 链接到指定文件的指定位置
			语法 :
				1. 定义锚点
					<a name="1"></a>
					空标签添加name属性定义锚点名称
				2. 指定超链接的链接地址
					<a href="#1">1. 人物介绍</a>
					链接地址中使用#代表当前页面,后面跟上锚点名称,指定位置
		6. 链接地址为空时的语法:
			1. href="" 跳转至当前页,包含刷新 
			2. href="#" 跳转到当前页,没有刷新,会在当前url末尾添加上#
			3. href="javascript:void(0);"
				跳转至当前页,类似于href="",但是不会刷新页面
2. 表格标签
	1. 结构化标签,采用行和列来显示数据
	2. 语法 :
		1. <table></table> 表格标签
		2. 表格中嵌套行标签<tr></tr>
			tr : table row
		3. 行中嵌套单元格标签<td></td>
			td : table data
	3. 标签属性
		1. table 属性
			1. border : 为表格添加边框,取像素值
			2. bgcolor : 设置表格背景颜色,取颜色的英文单词
			3. align : 设置表格在父元素中的水平位置,取值 : left/center/right
			4. width : 设置表格宽度,取像素值
			5. height : 设置表格高度,取像素值
				注 : 表格的默认尺寸由内容决定,手动设置宽高之后,会根据单元格内容的多少自动分配行和列的尺寸
			6. cellspacing : 设置表格边框与边框之间的距离,取像素值
			7. cellpadding : 设置单元格内容与边框之间的距离

		2. tr 属性
			1. bgcolor : 设置当前行的背景颜色
			2. align : 设置当前行内容的水平对齐方式,默认居左,可取值left/center/right
			3. valign : 设置当前行内容 的垂直对齐方式,默认垂直居中,可取值 top/middle/bottom
		3. td 属性
			1. bgcolor : 为单元格设置背景颜色
			2. align : 设置当前单元格内容的水平对齐方式
			3. valign : 设置单元格内容的垂直对齐方式
			4. width/height : 设置单元格的宽高尺寸
	4. 单元格合并(表格结构调整)
		1. 合并属性是单元格td独有的属性
		2. 属性 :
			colspan : collum-span 跨列合并
				横向合并单元格,取值为无单位的数值,表示包含当前单元格在内,合并几个单元格
				例:
					colspan="3"
			rowspan : 跨行合并,取无单位的数值,表示合并几个单元格
		3. 注意 :
			不管是跨行还是跨列,都涉及表格结构调整,需要手动删除多余的单元格
			跨列合并 : 删除当前行中多余的单元格
			跨行合并 : 删除后面行中对应的单元格
	5. 表格内部结构(行分组标签)
		1. <thead></thead>
			表头行分组
		2. <tfoot></tfoot>
			表尾行分组
		3. <tbody></tbody>
			表格主体,行分组标签可以省略不写,默认情况下,所有的行都自动加入tbody中
	6. th标签
		用法与td一致,表示单元格,自带文本加粗和居中效果,常用于表头
3. 表单元素
	1. 表单用于收集用户信息,并将数据发送给服务器
	2. 组成 :
		1. form 表单元素
		2. 表单控件(输入框,按钮,文件选择...)
	3. 语法 :
		<form>
			表单控件
		</form>
	4. form标签属性
		1. action : 指定数据的提交地址
		2. method : 指定数据的提交方式
			默认为get,可取get/post
			1. get 请求 :
				1. 将数据以参数形式拼接在URL后面,明文传输
				例 :
					baidu.com?name=zhangsan&passwd=123456
				2. 安全性较低
				3. 数据大小有限制,不超过2Kb
			2. post请求
				1. 数据会被打包,以请求体的方式传输,外界不可见
				2. 隐式传输,安全性较高
				3. 没有大小限制
		3. enctype : encode-type
			指定数据发往服务器时的编码类型
			取值 :
				1. application/x-www-form-urlencoded
				默认的编码方式,会将表单中的数据转换成一个字符串,附加到URL后面(get方式提交数据),请求新的URL
				2. multipart/form-data
				专门用来上传特殊数据类型,比如图片,文件等,通过二进制形式将数据发送至服务器,要求必须指定数据以post方式提交
	5. 表单控件(重点)
		1. 提供与用户交互的可视化组件
		2. 分类
			1. 文本框和密码框
				语法 :
				<input type="text">	
				<input type="password">
				属性 :
				1. name : 定义控件名称,必填,缺少的话无法提交数据
				2. value : 设置控件的值,文本框与密码框的值更常见使用JS动态操作
				3. maxlength : 设置输入框最大字符数,取无单位数值
				4. placeholder : 用户输入之前显示的提示文本
				5. autocomplete : 文本框的自动提示功能,取值on/off
			2. 单选钮和复选框
				单选:<input type="radio">
				复选:<input type="checkbox">
				属性 :
					1. name : 控件名称,必填
					2. value: 控件的值,必填,代表按钮的含义,最终将发送给服务器
					3. checked : 设置按钮的选中状态,直接使用属性名,省略属性值
				注意 :一组按钮的name属性值必须保持一致
				特殊用法 : label for  id
					将文本与按钮绑定在一起,点文本与点按钮一致
					语法 :
						<label for="male">
						<input id="male">
			3. 隐藏域和文件选择框
				1. 隐藏域 : 对用户不可见,某些服务器需要,但是不需要告知用户的数据,例如用户id,都可以使用隐藏域设置
					<input type="hidden" name="uid" value="001">
				2. 文件选择框 :
					<input type="file" name="uImg">
					注 :二进制数据传输时, 必须使用post提交,必须指定enctype
			4. 下拉菜单
				语法 :
					<select name="address">
						<option value="beijing"></option>
					</select>
			5. 多行文本域
				语法 :
					<textarea name='uinfo'></textarea>
				特点 : 支持多行输入,支持用户手动调整尺寸
			6. 按钮控件
				1. 提交按钮 : 当用户点击时,会将表单中的数据按照指定的方式发送给后台
					<input type="submit" value="">
					属性value用于设置按钮的显示文本
				2. 重置按钮 : 将表单中的数据恢复到初始化状态
					<input type="reset" value="">
				3. 普通按钮 : 需要自行绑定JS事件
					<input type="button" value="">
					注 : 提交和重置按钮自带显示文本,普通按钮没有默认显示文本,需要单独指定
				4. <button></button>标签
					也可以表示按钮,标签内容就是按钮显示文本
					注意 :
					1. form表单外使用button标签,就是普通按钮
					2. form表单内部使用<button>标签,等价于<input type="submit">,具有提交功能





















