#   1. 生成前40个斐波那契数 (Fibonacci 数列)
#   　  1  1  2  3  5  8  13  21 ....
#     要求: 将这些数存入在列表中
#       最后打印出这些数

# 方法1
# L = []
# a = 0  # a表示当前数b的前一个
# b = 1  # b永远绑定当前的一个Fibonacci数
# while len(L) < 40:
#     # 需要向L中加一个数,每次循环加一个
#     L.append(b)  # 把当前数加入到L中
#     # 算出下一个数,还用b来绑定,a绑定原来的b
#     c = a + b  # 算下一个数
#     a = b  # 把原来的数传给 a
#     b = c  # b绑定下一个数


# 方法2
# L = []
# a = 0  # a表示当前数b的前一个
# b = 1  # b永远绑定当前的一个Fibonacci数
# while len(L) < 40:
#     # 需要向L中加一个数,每次循环加一个
#     L.append(b)  # 把当前数加入到L中
#     # 算出下一个数,还用b来绑定,a绑定原来的b
#     a, b = b, a + b

# 方法3
L = [1, 1]
while len(L) < 40:
    L.append(L[-1] +  L[-2])

print(L)